{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucat\\\\Documents\\\\Cours\\\\UQAC\\\\Architecture\\\\AAE\\\\messagerie\\\\src\\\\Components\\\\Message\\\\MessageForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { createClient } from 'redis';\n\n/*async function nodeRedisDemo() {\r\n    try {\r\n        const client = createClient();\r\n        await client.connect();\r\n\r\n        await client.set('mykey', 'Hello from node redis');\r\n        const myKeyValue = await client.get('mykey');\r\n        console.log(myKeyValue);\r\n\r\n        const numAdded = await client.zAdd('vehicles', [\r\n            {\r\n                score: 4,\r\n                value: 'car',\r\n            },\r\n            {\r\n                score: 2,\r\n                value: 'bike',\r\n            },\r\n        ]);\r\n        console.log(`Added ${numAdded} items.`);\r\n\r\n        for await (const { score, value } of client.zScanIterator('vehicles')) {\r\n            console.log(`${value} -> ${score}`);\r\n        }\r\n\r\n        await client.quit();\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientForm = _ref => {\n  _s();\n  let {\n    messageFormNeedUpdate\n  } = _ref;\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [content, setContent] = useState(\"\");\n  const onSubmit = data => {\n    setContent(data.content);\n    messageFormNeedUpdate();\n  };\n  const client = createClient();\n  client.connect().then(r => {\n    client.set('mykey', 'Hello from node redis').then(r => {\n      client.get('mykey').then(r => {\n        console.log(r);\n      });\n    });\n  });\n\n  //nodeRedisDemo();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    method: \"get\",\n    className: \"form-example\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-example\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Message\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Envoyer!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(ClientForm, \"/Tc8q2WX5DqrtmIf28gLurC4mIQ=\", false, function () {\n  return [useForm];\n});\n_c = ClientForm;\nexport default ClientForm;\nvar _c;\n$RefreshReg$(_c, \"ClientForm\");","map":{"version":3,"names":["React","useState","useForm","createClient","jsxDEV","_jsxDEV","ClientForm","_ref","_s","messageFormNeedUpdate","register","handleSubmit","content","setContent","onSubmit","data","client","connect","then","r","set","get","console","log","action","method","className","children","type","name","id","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["C:/Users/lucat/Documents/Cours/UQAC/Architecture/AAE/messagerie/src/Components/Message/MessageForm.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {FieldValues, useForm} from \"react-hook-form\";\r\nimport { createClient } from 'redis';\r\n\r\n/*async function nodeRedisDemo() {\r\n    try {\r\n        const client = createClient();\r\n        await client.connect();\r\n\r\n        await client.set('mykey', 'Hello from node redis');\r\n        const myKeyValue = await client.get('mykey');\r\n        console.log(myKeyValue);\r\n\r\n        const numAdded = await client.zAdd('vehicles', [\r\n            {\r\n                score: 4,\r\n                value: 'car',\r\n            },\r\n            {\r\n                score: 2,\r\n                value: 'bike',\r\n            },\r\n        ]);\r\n        console.log(`Added ${numAdded} items.`);\r\n\r\n        for await (const { score, value } of client.zScanIterator('vehicles')) {\r\n            console.log(`${value} -> ${score}`);\r\n        }\r\n\r\n        await client.quit();\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}*/\r\n\r\ninterface MessageFormProps {\r\n    messageFormNeedUpdate: () => void\r\n}\r\n\r\nconst ClientForm: React.FC<MessageFormProps> = ({messageFormNeedUpdate}: MessageFormProps) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    const onSubmit = (data: FieldValues) => {\r\n        setContent(data.content);\r\n        messageFormNeedUpdate();\r\n    }\r\n\r\n    const client = createClient();\r\n    client.connect().then(r => {\r\n        client.set('mykey', 'Hello from node redis').then(r => {\r\n            client.get('mykey').then(r => {\r\n                console.log(r);\r\n            })\r\n        });\r\n    });\r\n\r\n    //nodeRedisDemo();\r\n\r\n    return (\r\n        <form action=\"\" method=\"get\" className=\"form-example\">\r\n            <div className=\"form-example\">\r\n                <input type=\"text\" name=\"name\" id=\"name\" placeholder={\"Message\"} required/>\r\n                <input type=\"submit\" value=\"Envoyer!\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default ClientForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAcC,QAAQ,QAAO,OAAO;AAChD,SAAqBC,OAAO,QAAO,iBAAiB;AACpD,SAASC,YAAY,QAAQ,OAAO;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA,SAAAC,MAAA,IAAAC,OAAA;AAmCA,MAAMC,UAAsC,GAAGC,IAAA,IAA+C;EAAAC,EAAA;EAAA,IAA9C;IAACC;EAAuC,CAAC,GAAAF,IAAA;EACrF,MAAM;IAACG,QAAQ;IAAEC;EAAY,CAAC,GAAGT,OAAO,CAAC,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,QAAQ,GAAIC,IAAiB,IAAK;IACpCF,UAAU,CAACE,IAAI,CAACH,OAAO,CAAC;IACxBH,qBAAqB,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMO,MAAM,GAAGb,YAAY,CAAC,CAAC;EAC7Ba,MAAM,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAI;IACvBH,MAAM,CAACI,GAAG,CAAC,OAAO,EAAE,uBAAuB,CAAC,CAACF,IAAI,CAACC,CAAC,IAAI;MACnDH,MAAM,CAACK,GAAG,CAAC,OAAO,CAAC,CAACH,IAAI,CAACC,CAAC,IAAI;QAC1BG,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;MAClB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;;EAEF;;EAEA,oBACId,OAAA;IAAMmB,MAAM,EAAC,EAAE;IAACC,MAAM,EAAC,KAAK;IAACC,SAAS,EAAC,cAAc;IAAAC,QAAA,eACjDtB,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACC,WAAW,EAAE,SAAU;QAACC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3E/B,OAAA;QAAOuB,IAAI,EAAC,QAAQ;QAACS,KAAK,EAAC;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf,CAAC;AAAA5B,EAAA,CA5BKF,UAAsC;EAAA,QACPJ,OAAO;AAAA;AAAAoC,EAAA,GADtChC,UAAsC;AA6B5C,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}